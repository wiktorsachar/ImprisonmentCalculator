{"version":3,"sources":["components/DateSelectorPanel/DateSelectorPanel.js","components/EnterPenaltyPanel/EnterPenaltyPanel.js","components/RelasePanel/RelasePanel.js","components/Footer/Footer.js","components/ResetButton/ResetButton.js","components/Passings/Passings.js","App.js","serviceWorker.js","index.js"],"names":["DateSelectorPanel","props","react_default","a","createElement","id","type","value","currentDate","onChange","e","handler","target","EnterPenaltyPanel","placeholder","size","years","months","weeks","days","RelasePanel","period","passings","Date","parse","date","displayDate","day","getDate","toString","month","getMonth","year","getFullYear","console","log","length","concat","className","Footer","ResetButton","onClick","Passings","Fragment","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handlePenaltyTextInput","bind","assertThisInitialized","handleDateSelector","handleResetButton","parseInt","setState","components_DateSelectorPanel_DateSelectorPanel","components_EnterPenaltyPanel_EnterPenaltyPanel","components_Passings_Passings","components_RelasePanel_RelasePanel","components_ResetButton_ResetButton","components_Footer_Footer","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa699772.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DateSelectorPanel = props => {\r\n  return (\r\n    <div id=\"date-selector-panel\">\r\n      <h3>Data rozpoczęcia:</h3>\r\n      <input type=\"date\" value={props.currentDate} onChange={e => props.handler(e.target.value)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateSelectorPanel;\r\n","import React from \"react\";\r\n\r\nconst EnterPenaltyPanel = props => {\r\n  return (\r\n    <div id=\"enter-penalty-panel\">\r\n      <h3>Wyrok:</h3>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"lata\"\r\n        size=\"4\"\r\n        value={props.years || \"\"}\r\n        onChange={e => {\r\n          props.handler(e.target.value, \"years\");\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"miesiące\"\r\n        size=\"4\"\r\n        value={props.months || \"\"}\r\n        onChange={e => {\r\n          props.handler(e.target.value, \"months\");\r\n        }}\r\n      />\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"tygodnie\"\r\n        size=\"4\"\r\n        value={props.weeks || \"\"}\r\n        onChange={e => {\r\n          props.handler(e.target.value, \"weeks\");\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"dni\"\r\n        size=\"4\"\r\n        value={props.days || \"\"}\r\n        onChange={e => {\r\n          props.handler(e.target.value, \"days\");\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnterPenaltyPanel;\r\n","import React from \"react\";\r\n\r\nconst RelasePanel = props => {\r\n  const day = 86400000;\r\n  const period =\r\n    props.days * 1 +\r\n    props.weeks * 7 +\r\n    props.months * 30 +\r\n    props.years * 365 -\r\n    props.passings;\r\n  const currentDate = Date.parse(props.currentDate);\r\n  const date = new Date(currentDate + period * day);\r\n  const displayDate = (() => {\r\n    let day = date.getDate().toString();\r\n    let month = (date.getMonth() + 1).toString();\r\n    let year = date.getFullYear().toString();\r\n    console.log(\"day:\" + day + \" month:\" + month + \" year:\" + year);\r\n    if (day.length < 2) {\r\n      day = `0${day}`;\r\n    }\r\n    if (month.length < 2) {\r\n      month = `0${month}`;\r\n    }\r\n    return day + \".\" + month + \".\" + year + \" r.\";\r\n  })();\r\n  if (\r\n    (props.days || props.weeks || props.months || props.years) &&\r\n    props.currentDate\r\n  ) {\r\n    return (\r\n      <div id=\"relase-panel\" className=\"border\">\r\n        {/* <h3>Proponowana data zwolnienia:</h3> */}\r\n        <h1 id=\"output-date\">{displayDate}</h1>\r\n        <p>(dodano: {period} dni)</p>\r\n      </div>\r\n    );\r\n  } else if (props.days || props.weeks || props.months || props.years) {\r\n    return (\r\n      <div id=\"relase-panel\">\r\n        <p>(uzupełnij datę)</p>\r\n      </div>\r\n    );\r\n  } else if (props.currentDate) {\r\n    return (\r\n      <div id=\"relase-panel\">\r\n        <p>(uzupełnij wyrok)</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div id=\"relase-panel\">\r\n        <p>(uzupełnij datę i wyrok)</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default RelasePanel;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>\r\n        Na podstawie:{\" \"}\r\n        <i>\r\n          Dz.U.2019.0.676 t.j. - Ustawa z dnia 6 czerwca 1997 r. - Kodeks karny\r\n          wykonawczy, art. 12c.\r\n        </i>\r\n      </p>\r\n      <p>&#x24B8; Wiktor Sacharczuk 2019</p>\r\n      <p>v.1.2 beta</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nconst ResetButton = props => {\r\n  return (\r\n    <div className=\"actions\">\r\n      <button onClick={props.handler}>RESET</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetButton;","import React from \"react\";\r\n\r\nconst Passings = props => {\r\n  return (\r\n    <>\r\n      <h3>Zaliczenia:</h3>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"dni\"\r\n        size=\"4\"\r\n        value={props.passings || \"\"}\r\n        onChange={e => {\r\n          props.handler(e.target.value, \"passings\");\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Passings;\r\n","//Imprisonment calculator app;\n\nimport React from \"react\";\nimport DateSelectorPanel from \"./components/DateSelectorPanel/DateSelectorPanel\";\nimport EnterPenaltyPanel from \"./components/EnterPenaltyPanel/EnterPenaltyPanel\";\nimport RelasePanel from \"./components/RelasePanel/RelasePanel\";\nimport Footer from \"./components/Footer/Footer\";\nimport ResetButton from \"./components/ResetButton/ResetButton\";\nimport Passings from \"./components/Passings/Passings\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentDate: \"\",\n      days: 0,\n      weeks: 0,\n      months: 0,\n      years: 0,\n      passings: 0\n    };\n    /*\n    - zamienić days,weeks,months,years na days, które będą przeliczane w handlePenaltyTextInput;\n    - dodać komponent odpowiadający za zaliczenia (odejmowanie dni od finalnej daty);\n    - rozbicie komponentu EnterPenaltyPanel na mniejsze komponenty;\n    */\n\n    this.handlePenaltyTextInput = this.handlePenaltyTextInput.bind(this);\n    this.handleDateSelector = this.handleDateSelector.bind(this);\n    this.handleResetButton = this.handleResetButton.bind(this);\n  }\n  handlePenaltyTextInput(value, period) {\n    if (value) {\n      value = parseInt(value);\n    } else {\n      value = 0;\n    }\n    switch (period) {\n      case \"days\":\n        this.setState({ days: value });\n        break;\n      case \"weeks\":\n        this.setState({ weeks: value });\n        break;\n      case \"months\":\n        this.setState({ months: value });\n        break;\n      case \"years\":\n        this.setState({ years: value });\n        break;\n      case \"passings\":\n        this.setState({ passings: value });\n        break;\n      default:\n        break;\n    }\n  }\n  handleDateSelector(date) {\n    this.setState({ currentDate: date });\n  }\n  handleResetButton() {\n    this.setState({\n      currentDate: \"\",\n      days: 0,\n      weeks: 0,\n      months: 0,\n      years: 0,\n      passings: 0\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <>\n        <div id=\"wrapper\">\n          <h2 id=\"title\">Kalkulator kary</h2>\n          <div id=\"input-module\">\n            <DateSelectorPanel\n              handler={this.handleDateSelector}\n              currentDate={this.state.currentDate}\n            />\n            <EnterPenaltyPanel\n              handler={this.handlePenaltyTextInput}\n              days={this.state.days}\n              weeks={this.state.weeks}\n              months={this.state.months}\n              years={this.state.years}\n            />\n            <Passings\n              handler={this.handlePenaltyTextInput}\n              passings={this.state.passings}\n            />\n          </div>\n          <br />\n          <RelasePanel\n            days={this.state.days}\n            weeks={this.state.weeks}\n            months={this.state.months}\n            years={this.state.years}\n            passings={this.state.passings}\n            currentDate={this.state.currentDate}\n          />\n        </div>\n        <br />\n        <ResetButton handler={this.handleResetButton} />\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}